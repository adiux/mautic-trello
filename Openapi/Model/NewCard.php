<?php
/**
 * NewCard.
 *
 * PHP version 5
 *
 * @category Class
 *
 * @author   OpenAPI Generator team
 *
 * @see     https://github.com/openapitools/openapi-generator
 */

/**
 * Idea2 Trello API.
 *
 * Create card in Trello
 *
 * The version of the OpenAPI document: 0.1.1
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace MauticPlugin\Idea2TrelloBundle\Openapi\Model;

use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * Class representing the NewCard model.
 *
 * @author  OpenAPI Generator team
 */
class NewCard
{
    /**
     * Card Name.
     *
     * @var string
     * @SerializedName("name")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   min = 1
     * )
     */
    protected $name;

    /**
     * The ID of the list the card should be created in.
     *
     * @var string
     * @SerializedName("idList")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   min = 1
     * )
     */
    protected $idList;

    /**
     * Card Description.
     *
     * @var string|null
     * @SerializedName("desc")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $desc;

    /**
     * @var string|null
     * @SerializedName("pos")
     * @Assert\Choice({ "top", "bottom" })
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $pos;

    /**
     * full-date notation as defined by RFC 3339, section 5.6. Default Timezone is UTC.
     *
     * @var \DateTime|null
     * @SerializedName("due")
     * @Assert\DateTime()
     * @Type("DateTime")
     */
    protected $due;

    /**
     * @var string|null
     * @SerializedName("urlSource")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $urlSource;

    /**
     * If using idCardSource you can specify which properties to copy over.
     *
     * @var string|null
     * @SerializedName("keepFromSource")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $keepFromSource;

    /**
     * Constructor.
     *
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->name = isset($data['name']) ? $data['name'] : null;
        $this->idList = isset($data['idList']) ? $data['idList'] : null;
        $this->desc = isset($data['desc']) ? $data['desc'] : null;
        $this->pos = isset($data['pos']) ? $data['pos'] : null;
        $this->due = isset($data['due']) ? $data['due'] : null;
        $this->urlSource = isset($data['urlSource']) ? $data['urlSource'] : null;
        $this->keepFromSource = isset($data['keepFromSource']) ? $data['keepFromSource'] : null;
    }

    /**
     * Gets name.
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Sets name.
     *
     * @param string $name Card Name
     *
     * @return $this
     */
    public function setName(string $name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Gets idList.
     *
     * @return string
     */
    public function getIdList()
    {
        return $this->idList;
    }

    /**
     * Sets idList.
     *
     * @param string $idList The ID of the list the card should be created in
     *
     * @return $this
     */
    public function setIdList(string $idList)
    {
        $this->idList = $idList;

        return $this;
    }

    /**
     * Gets desc.
     *
     * @return string|null
     */
    public function getDesc()
    {
        return $this->desc;
    }

    /**
     * Sets desc.
     *
     * @param string|null $desc Card Description
     *
     * @return $this
     */
    public function setDesc(string $desc = null)
    {
        $this->desc = $desc;

        return $this;
    }

    /**
     * Gets pos.
     *
     * @return string|null
     */
    public function getPos()
    {
        return $this->pos;
    }

    /**
     * Sets pos.
     *
     * @return $this
     */
    public function setPos(string $pos = null)
    {
        $this->pos = $pos;

        return $this;
    }

    /**
     * Gets due.
     *
     * @return \DateTime|null
     */
    public function getDue()
    {
        return $this->due;
    }

    /**
     * Sets due.
     *
     * @param \DateTime|null $due full-date notation as defined by RFC 3339, section 5.6. Default Timezone is UTC
     *
     * @return $this
     */
    public function setDue(\DateTime $due = null)
    {
        $this->due = $due;

        return $this;
    }

    /**
     * Gets urlSource.
     *
     * @return string|null
     */
    public function getUrlSource()
    {
        return $this->urlSource;
    }

    /**
     * Sets urlSource.
     *
     * @return $this
     */
    public function setUrlSource(string $urlSource = null)
    {
        $this->urlSource = $urlSource;

        return $this;
    }

    /**
     * Gets keepFromSource.
     *
     * @return string|null
     */
    public function getKeepFromSource()
    {
        return $this->keepFromSource;
    }

    /**
     * Sets keepFromSource.
     *
     * @param string|null $keepFromSource if using idCardSource you can specify which properties to copy over
     *
     * @return $this
     */
    public function setKeepFromSource(string $keepFromSource = null)
    {
        $this->keepFromSource = $keepFromSource;

        return $this;
    }
}
