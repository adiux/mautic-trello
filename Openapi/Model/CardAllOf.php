<?php
/**
 * CardAllOf.
 *
 * PHP version 5
 *
 * @category Class
 *
 * @author   OpenAPI Generator team
 *
 * @see     https://github.com/openapitools/openapi-generator
 */

/**
 * Idea2 Trello API.
 *
 * Create card in Trello
 *
 * The version of the OpenAPI document: 0.1.1
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace MauticPlugin\Idea2TrelloBundle\Openapi\Model;

use JMS\Serializer\Annotation\SerializedName;
use JMS\Serializer\Annotation\Type;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * Class representing the CardAllOf model.
 *
 * @author  OpenAPI Generator team
 */
class CardAllOf
{
    /**
     * @var string
     * @SerializedName("id")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   min = 1
     * )
     */
    protected $id;

    /**
     * @var array[]|null
     * @SerializedName("labels")
     * @Assert\All({
     *   @Assert\Type("array")
     * })
     * @Type("array<array>")
     */
    protected $labels;

    /**
     * @var string|null
     * @SerializedName("url")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $url;

    /**
     * full-date notation as defined by RFC 3339, section 5.6. Default Timezone is UTC.
     *
     * @var \DateTime|null
     * @SerializedName("dateLastActivity")
     * @Assert\DateTime()
     * @Type("DateTime")
     */
    protected $dateLastActivity;

    /**
     * full-date notation as defined by RFC 3339, section 5.6. Default Timezone is UTC.
     *
     * @var \DateTime|null
     * @SerializedName("due")
     * @Assert\DateTime()
     * @Type("DateTime")
     */
    protected $due;

    /**
     * Comma-separated list of member IDs.
     *
     * @var string|null
     * @SerializedName("idMembers")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $idMembers;

    /**
     * @var array[]|null
     * @SerializedName("attachments")
     * @Assert\All({
     *   @Assert\Type("array")
     * })
     * @Type("array<array>")
     */
    protected $attachments;

    /**
     * Constructor.
     *
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->id = isset($data['id']) ? $data['id'] : null;
        $this->labels = isset($data['labels']) ? $data['labels'] : null;
        $this->url = isset($data['url']) ? $data['url'] : null;
        $this->dateLastActivity = isset($data['dateLastActivity']) ? $data['dateLastActivity'] : null;
        $this->due = isset($data['due']) ? $data['due'] : null;
        $this->idMembers = isset($data['idMembers']) ? $data['idMembers'] : null;
        $this->attachments = isset($data['attachments']) ? $data['attachments'] : null;
    }

    /**
     * Gets id.
     *
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @return $this
     */
    public function setId(string $id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets labels.
     *
     * @return array[]|null
     */
    public function getLabels()
    {
        return $this->labels;
    }

    /**
     * Sets labels.
     *
     * @param array[]|null $labels
     *
     * @return $this
     */
    public function setLabels(array $labels = null)
    {
        $this->labels = $labels;

        return $this;
    }

    /**
     * Gets url.
     *
     * @return string|null
     */
    public function getUrl()
    {
        return $this->url;
    }

    /**
     * Sets url.
     *
     * @return $this
     */
    public function setUrl(string $url = null)
    {
        $this->url = $url;

        return $this;
    }

    /**
     * Gets dateLastActivity.
     *
     * @return \DateTime|null
     */
    public function getDateLastActivity()
    {
        return $this->dateLastActivity;
    }

    /**
     * Sets dateLastActivity.
     *
     * @param \DateTime|null $dateLastActivity full-date notation as defined by RFC 3339, section 5.6. Default Timezone is UTC
     *
     * @return $this
     */
    public function setDateLastActivity(\DateTime $dateLastActivity = null)
    {
        $this->dateLastActivity = $dateLastActivity;

        return $this;
    }

    /**
     * Gets due.
     *
     * @return \DateTime|null
     */
    public function getDue()
    {
        return $this->due;
    }

    /**
     * Sets due.
     *
     * @param \DateTime|null $due full-date notation as defined by RFC 3339, section 5.6. Default Timezone is UTC
     *
     * @return $this
     */
    public function setDue(\DateTime $due = null)
    {
        $this->due = $due;

        return $this;
    }

    /**
     * Gets idMembers.
     *
     * @return string|null
     */
    public function getIdMembers()
    {
        return $this->idMembers;
    }

    /**
     * Sets idMembers.
     *
     * @param string|null $idMembers Comma-separated list of member IDs
     *
     * @return $this
     */
    public function setIdMembers(string $idMembers = null)
    {
        $this->idMembers = $idMembers;

        return $this;
    }

    /**
     * Gets attachments.
     *
     * @return array[]|null
     */
    public function getAttachments()
    {
        return $this->attachments;
    }

    /**
     * Sets attachments.
     *
     * @param array[]|null $attachments
     *
     * @return $this
     */
    public function setAttachments(array $attachments = null)
    {
        $this->attachments = $attachments;

        return $this;
    }
}
